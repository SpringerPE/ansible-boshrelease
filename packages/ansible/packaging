#!/usr/bin/env bash

# abort script on any command that exits with a non zero value
set -e -x

# Grab the latest versions that are in the directory
ANSIBLE_VERSION=$(ls -r ansible/ansible-*.tar.gz | sed 's/.*\/ansible-\(.*\)\.tar\.gz$/\1/' | head -1)
PYCRYPTO_VERSION=$(ls -r ansible/pycrypto-*.tar.gz | sed 's/.*\/pycrypto-\(.*\)\.tar\.gz$/\1/' | head -1)
JINJA_VERSION=$(ls -r ansible/jinja-*.tar.gz | sed 's/.*\/jinja-\(.*\)\.tar\.gz$/\1/' | head -1)
PARAMIKO_VERSION=$(ls -r ansible/paramiko-*.tar.gz | sed 's/.*\/paramiko-\(.*\)\.tar\.gz$/\1/' | head -1)
LIBFFI_VERSION="3.2.1"
BOSH_PACKAGES_DIR=${BOSH_PACKAGES_DIR:-/var/vcap/packages}

echo "Extracting pycrypto ${PYCRYPTO_VERSION} ..."
tar xvf "ansible/pycrypto-${PYCRYPTO_VERSION}.tar.gz"

echo "Extracting jinja ${JINJA_VERSION} ..."
tar xvf "ansible/jinja-${JINJA_VERSION}.tar.gz"

echo "Extracting paramiko ${PARAMIKO_VERSION} ..."
tar xvf "ansible/paramiko-${PARAMIKO_VERSION}.tar.gz"

echo "Extracting ansible ${ANSIBLE_VERSION} ..."
tar xvf "ansible/ansible-${ANSIBLE_VERSION}.tar.gz"

echo "Creating python site packages folder ..."
mkdir -p ${BOSH_INSTALL_TARGET}/lib/python2.7/site-packages

echo "Setting the PYTHONPATH with setuptools and ansible site packages ..."
PYTHONPATH="${BOSH_INSTALL_TARGET}/lib/python2.7/site-packages:${PYTHONPATH}"
PYTHONPATH="${BOSH_PACKAGES_DIR}/setuptools/lib/python2.7/site-packages:${PYTHONPATH}"
PYTHONPATH="${BOSH_PACKAGES_DIR}/pip/lib/python2.7/site-packages:${PYTHONPATH}"
export PYTHONPATH

echo "Setting setuptools build sources ..."
CPATH="${BOSH_PACKAGES_DIR}/libffi/lib/libffi-${LIBFFI_VERSION}/include"
CPATH="${BOSH_PACKAGES_DIR}/libyaml/include:${CPATH}"
export CPATH
LIBRARY_PATH="${BOSH_PACKAGES_DIR}/libffi/lib"
LIBRARY_PATH="${BOSH_PACKAGES_DIR}/libyaml/lib:${LIBRARY_PATH}"
LIBRARY_PATH="${BOSH_PACKAGES_DIR}/openssl/lib:${LIBRARY_PATH}"
export LIBRARY_PATH
export LD_LIBRARY_PATH="${LIBRARY_PATH}"


echo "Installing pycrypto ..."
pushd "pycrypto-${PYCRYPTO_VERSION}"
  ${BOSH_PACKAGES_DIR}/python27/bin/python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

echo "Installing jinja ..."
pushd "jinja-${JINJA_VERSION}"
  ${BOSH_PACKAGES_DIR}/python27/bin/python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

echo "Installing paramiko ..."
pushd "paramiko-${PARAMIKO_VERSION}"
  ${BOSH_PACKAGES_DIR}/python27/bin/python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

echo "Installing ansible ..."
pushd "ansible-${ANSIBLE_VERSION}"
  ${BOSH_PACKAGES_DIR}/python27/bin/python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

# Install aditional plugins
mkdir -p ${BOSH_INSTALL_TARGET}/plugins
plugins=$(find plugins -maxdepth 1 -type d  ! -path plugins)
if [ "${plugins}" ]; then
  echo "Adding plugins ..."
  for plugin in ${plugins}; do
    cp -av ${plugin}/* ${BOSH_INSTALL_TARGET}/plugins/
  done
fi

# Install libraries
mkdir -p ${BOSH_INSTALL_TARGET}/library
libs=$(find library -maxdepth 1 -type d  ! -path library)
if [ "${libs}" ]; then
  echo "Adding libraries ..."
  for lib in ${libs}; do
      cp -av ${lib}/* ${BOSH_INSTALL_TARGET}/library/
  done
fi

# Install roles
mkdir -p ${BOSH_INSTALL_TARGET}/roles
roles=$(find roles -maxdepth 1 -type d  ! -path roles)
if [ "${roles}" ]; then
  echo "Adding roles ..."
  for role in ${roles}; do
      cp -av ${role}/* ${BOSH_INSTALL_TARGET}/roles/
  done
fi

# Install additional dependencies
echo "Installing additional requirements.txt ..."
if [ -e "requirements.txt" ]; then
    cp -av "requirements.txt" ${BOSH_INSTALL_TARGET}/
    ${BOSH_PACKAGES_DIR}/pip/bin/pip install --prefix=${BOSH_INSTALL_TARGET} --compile -r requirements.txt
fi

# Install shell helpers
echo "Adding shell helpers ..."
cp -av _helpers ${BOSH_INSTALL_TARGET}/

